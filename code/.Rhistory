library(shiny); runApp('Downloads/stream-intermittency-visualization-dashboard-main/SIVD_main.R')
## Copyright (c) Adam N. Price, 2022
## Email: adnprice@ucsc.edu
##
############################# Description ##########################
##
## Code to extract rewetting events at different flow thresholds
##   22-02-25: Current threholds are Q5,10,15,25,50, and peaks after
##             those thresholds are met
##
############################# Packages #############################
library(parallel)
library(lubridate)
library(tidyverse)
library(dataRetrieval)
# Load wetting date data
wetEvents = read_csv("data/wettingRegimes_wettingLengths_Peaks.csv") %>%
na.omit()
setwd("~/Google Drive/My Drive/12_subprojects/wettingRegimes_code/code")
# Load wetting date data
wetEvents = read_csv("data/wettingRegimes_wettingLengths_Peaks.csv") %>%
na.omit()
setwd("~/Google Drive/My Drive/12_subprojects/wettingRegimes_code/code")
setwd("~/Google Drive/My Drive/12_subprojects/wettingRegimes_code")
# Load wetting date data
wetEvents = read_csv("data/wettingRegimes_wettingLengths_Peaks.csv") %>%
na.omit()
# Load wetting date data
wetEvents = read_csv("data/wettingRegimes_wettingLengths_Peaks.csv") %>%
na.omit()
# Load wetting date data
wetEvents = read_csv("./data/wettingRegimes_wettingLengths_Peaks.csv") %>%
na.omit()
setwd("~/Google Drive/My Drive/12_subprojects/wettingRegimes_code/code")
# Load wetting date data
wetEvents = read_csv("data/wettingRegimes_wettingLengths.csv") %>%
na.omit()
View(wetEvents)
library(ggplot2)
library(tidyverse)
library(ggridges)
library(ggridges)
dat = read_csv("data/wettingRegimes_wettingLengths_Peaks.csv") %>%
na.omit()
dat = read_csv("data/archive/wettingRegimes_wettingLengths_Peaks.csv") %>%
na.omit()
dat = read_csv("data/zz_archive/wettingRegimes_wettingLengths_Peaks.csv") %>%
na.omit()
View(dat)
##
## Copyright (c) Adam N. Price, 2022
## Email: adnprice@ucsc.edu
##
############################# Description ##########################
##
## Test code for streamgage 11149400 to pick peaks and calculate metrics
##
##
############################# Packages #############################
library(tidyverse)
library(ggplot2)
## Load data
wetEvents = read_csv("data/wettingRegimes_wettingLengths.csv") %>%
na.omit()
## Get a random sample of events
set.seed(42)
wetEvents = wetEvents %>%
group_by(gage) %>%
slice_sample(n=1)
## Select gage 11149400
n = which(wetEvents$gage==11149400)
## Download UV data from NWIS for that wetting event
siteNumber = str_pad(wetEvents$gage[n], 8, pad = "0")
parameterCd = "00060"
startDate = wetEvents$wet_date[n]-1
endDate = wetEvents$wetLengthDate[n]
dat = dataRetrieval::readNWISuv(
siteNumber,
parameterCd,
startDate,
endDate
)
View(dat)
#### Plot the data
p <- ggplot(data = dat) +
geom_line(aes(x = dateTime,
# y = round(X_00060_00000,1)),
y = q_peak),
alpha = 0.5)+
# scale_y_continuous(trans='log10') +
theme_classic()+
xlab("Date")+
ylab("Discharge (cfs)")
p
View(dat)
typeof(dat$dateTime)
dat$dateTime = lubridate::as_datetime(dat$dateTime)
View(dat)
#### Plot the data
ggplot(data = dat) +
geom_line(aes(x = dateTime,
y = X_00060_00000),
alpha = 0.5)+
# scale_y_continuous(trans='log10') +
theme_classic()+
xlab("Date")+
ylab("Discharge (cfs)")
install.packages("hydroEvents")
library(hydroEvents)
limbs(data = dat$X_00060_00000, dates = NULL, events = BF_res, main = "with 'eventBaseflow'")
limbs(data = dat$X_00060_00000, dates = NULL, main = "with 'eventBaseflow'")
### Event picker
BF_res = eventBaseflow(dat$X_00060_00000)
limbs(data = dat$X_00060_00000, dates = NULL, events = BF_res, main = "with 'eventBaseflow'")
dataBassRiver
BF_res
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 10, delta.x = 1, threshold = 0)
plotEvents(data = dataBassRiver, events = Max_res, ymax = 1160, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
View(Max_res)
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 10, delta.x = 1, threshold = 0)
plotEvents(data = dat$X_00060_00000, events = Max_res, ymax = 1160, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
WQ_Q
### Event picker
BF_res = eventBaseflow(dat$X_00060_00000)
warnings()
View(BF_res)
limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = BF_res, main = "with 'eventBaseflow'")
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 10, delta.x = 1, threshold = 0)
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
Max_res = eventMinima(data = dat$X_00060_00000, delta.y = 10, delta.x = 1, threshold = 0)
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 10, delta.x = 1, threshold = 0)
limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 1, delta.x = 1, threshold = 0)
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 5, delta.x = 1, threshold = 0)
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 0, delta.x = 1, threshold = 0)
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 1, delta.x = 10, threshold = 0)
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 1, delta.x = 5, threshold = 0)
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 1, delta.x = 1, threshold = 0)
Max_res = eventMaxima(data = dat$X_00060_00000, delta.y = 1, delta.x = 1, threshold = 0.1)
plotEvents(data = dat$X_00060_00000, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
View(p)
View(p)
dat
View(dat)
dat$Q = round(dat$X_00060_00000)
View(dat)
dat$Q = round(dat$X_00060_00000,2)
dat$Q = round(dat$X_00060_00000,1)
### Event picker
Max_res = eventMaxima(data = dat$dat$Q, delta.y = 1, delta.x = 1, threshold = 0.1)
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
quantile(dat$X_00060_00000)
percentile(dat$X_00060_00000)
quantile(dat$X_00060_00000,.25)
### Event picker
Max_res = eventMaxima(data = dat$dat$Q, delta.y = 1, delta.x = 1, threshold = quantile(dat$X_00060_00000,.25))
### Event picker
Max_res = eventMaxima(data = dat$dat$Q, delta.y = 1, delta.x = 1, threshold = quantile(dat$X_00060_00000,.25))quantile(dat$X_00060_00000,.25)
quantile(dat$X_00060_00000,.25)
quantile(dat$X_00060_00000,.25)[1]
quantile(dat$X_00060_00000,.25)[[1]]
### Event picker
Max_res = eventMaxima(data = dat$dat$Q, delta.y = 1, delta.x = 1, threshold = quantile(dat$X_00060_00000,.25)[[1]])
### Event picker
Max_res = eventMaxima(data = dat$dat$Q, delta.y = 1, delta.x = 1, threshold = 2.2)
0.1
### Event picker
Max_res = eventMaxima(data = dat$dat$Q, delta.y = 1, delta.x = 1, threshold = 0.1)
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = quantile(dat$X_00060_00000,.25))
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = 2.2)
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = quantile(dat$X_00060_00000,.5))
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
quantile(dat$X_00060_00000)
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = quantile(dat$X_00060_00000,.95))
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
wetEvents$wet_date[n]
View(dat)
## Select gage 11149400
n = which(wetEvents$gage==06404998)
## Download UV data from NWIS for that wetting event
siteNumber = str_pad(wetEvents$gage[n], 8, pad = "0")
parameterCd = "00060"
startDate = wetEvents$wet_date[n]-1
endDate = wetEvents$wetLengthDate[n]
dat = dataRetrieval::readNWISuv(
siteNumber,
parameterCd,
startDate,
endDate
)
dat$dateTime = lubridate::as_datetime(dat$dateTime)
dat$Q = round(dat$X_00060_00000,1)
#### Plot the data
ggplot(data = dat) +
geom_line(aes(x = dateTime,
y = X_00060_00000),
alpha = 0.5)+
# scale_y_continuous(trans='log10') +
theme_classic()+
xlab("Date")+
ylab("Discharge (cfs)")
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = quantile(dat$X_00060_00000,.95))
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = 0.1)
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 10, delta.x = 1, threshold = 0.1)
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 10, delta.x = 1, threshold = 0.1)
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = 0.1)
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 5, delta.x = 1, threshold = 0.1)
### Event picker
Max_res = eventMaxima(data = dat$Q, delta.y = 0, delta.x = 1, threshold = 0.1)
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
### Event picker
BF_res = eventBaseflow(dat$Q)
### Event picker
Max_res = eventBaseflow(dat$Q)
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = 0.1)
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
#### Plot the data
ggplot(data = dat) +
geom_line(aes(x = dateTime,
y = dat$Q),
alpha = 0.5)+
# scale_y_continuous(trans='log10') +
theme_classic()+
xlab("Date")+
ylab("Discharge (cfs)")
Max_res = eventMaxima(data = dat$Q, delta.y = 1, delta.x = 1, threshold = 0.1)
plotEvents(data = dat$Q, events = Max_res, xlab = "Index", ylab = "Flow (ML/day)", colpnt = "#E41A1C", colline = "#377EB8", main = "eventMaxima")
p = limbs(data = dat$X_00060_00000, dates = dat$dateTime, events = Max_res, main = "with 'eventBaseflow'")
gage = 13311000
source("~/Google Drive/My Drive/01_FoAF/Project_Files/01_ModeledFlows/03_analysis/code/getCOMID.R")
ap_NLDI(gage)
gage = 13311250
ap_NLDI(gage)
gage = 13311500
ap_NLDI(gage)
gage = 14362250
ap_NLDI(gage)
gage = 13311000
ap_NLDI(gage)
library(streamstats)
devtools::install_github("markwh/streamstats")
library(streamstats)
ws1 <- delineateWatershed(xlocation = -72.9249, ylocation = 42.3170, crs = 4326,
includeparameters = "true", includeflowtypes = "true")
stats1 <- computeFlowStats(workspaceID = ws1$workspaceID, rcode = "MA", simplify = TRUE)
stats1 <- computeFlowStats(workspaceID = ws1$workspaceID, rcode = "MA", simplify = TRUE)
View(ws1)
library(dataRetrieval)
library(tidyverse)
library(dplyr)
ap_NLDI <- function(x){
as.integer(dataRetrieval::findNLDI(nwis=x)$origin$comid)
}
### Read in all NP from PNW
dat = read.csv("../data/pnwNWall_DailyStats.csv")
setwd("~/Google Drive/My Drive/01_FoAF/Project_Files/01_ModeledFlows/03_analysis/code")
### Read in all NP from PNW
dat = read.csv("../data/pnwNWall_DailyStats.csv")
gageNHD = tibble(lapply(dat$X,ap_NLDI)) %>%
unlist() %>%
data_frame() %>%
cbind(.,dat$X)%>%
rename_with(.cols=1,~"comid")
View(gageNHD)
colnames(gageNHD) <- c('comid','gage')
colnames(dat) <- c("gage","numZero","numOne","startDate","endDate")
pnwNP <- dat %>%
left_join(x=dat,y=gageNHD, by=join_by(gage))
write.csv(pnwNP,'../data/pnwNPall_InfowStats.csv',row.names = F)
